version: "3"

services:
  simulated-annealing:
    build: .
    tty: true
    stdin_open: true
    image: simulated-annealing
    container_name: simulated-annealing
    volumes:
      - ./simulated-annealing:/app
    command: >
      bash -c "cd /app &&
      rm -f simulated-annealing.log &&
      ./waf configure --lp-lib=soplex --interval-lib=gaol --lp-lib=soplex &&
      ./waf install &&
      files=("ex2_1_8.bch" "ex2_1_9.bch" "ex6_1_3bis.bch" "launch.bch" "ex14_2_7.bch" "ex2_1_9fact.bch" "ex6_1_4.bch" "ex6_2_6.bch" "ex6_2_8.bch" "ex7_3_4.bch" "ex7_3_4bis.bch" "ex14_2_3.bch" "haverly.bch") &&
      for file in \$${files[@]}; do
        for i in {1..5}; do
          ./__build__/src/ibexopt benchs/optim/medium/\$$file --random-seed=\$$i >> simulated-annealing.log
        done
      done &&
      echo 'Ejecución completada'"
    deploy:
      resources:
        limits:
          cpus: "1.0"

  simulated-annealing-joa:
    build: .
    tty: true
    stdin_open: true
    image: simulated-annealing-joa
    container_name: simulated-annealing-joa
    volumes:
      - ./simulated-annealing-joa:/app
    command: >
      bash -c "cd /app &&
      rm -f simulated-annealing-joa.log &&
      ./waf configure --lp-lib=soplex --interval-lib=gaol --lp-lib=soplex &&
      ./waf install &&
      files=("ex2_1_8.bch" "ex2_1_9.bch" "ex6_1_3bis.bch" "launch.bch" "ex14_2_7.bch" "ex2_1_9fact.bch" "ex6_1_4.bch" "ex6_2_6.bch" "ex6_2_8.bch" "ex7_3_4.bch" "ex7_3_4bis.bch" "ex14_2_3.bch" "haverly.bch") &&
      for file in \$${files[@]}; do
        for i in {1..5}; do
          ./__build__/src/ibexopt benchs/optim/medium/\$$file --random-seed=\$$i >> simulated-annealing-joa.log
        done
      done &&
      echo 'Ejecución completada'"
    deploy:
      resources:
        limits:
          cpus: "1.0"

  hill-climbing:
    build: .
    tty: true
    stdin_open: true
    image: hill-climbing
    container_name: hill-climbing
    volumes:
      - ./hill-climbing:/app
    command: >
      bash -c "cd /app &&
      rm -f hill-climbing.log &&
      ./waf configure --lp-lib=soplex --interval-lib=gaol --lp-lib=soplex &&
      ./waf install &&
      files=("ex2_1_8.bch" "ex2_1_9.bch" "ex6_1_3bis.bch" "launch.bch" "ex14_2_7.bch" "ex2_1_9fact.bch" "ex6_1_4.bch" "ex6_2_6.bch" "ex6_2_8.bch" "ex7_3_4.bch" "ex7_3_4bis.bch" "ex14_2_3.bch" "haverly.bch") &&
      for file in \$${files[@]}; do
        for i in {1..5}; do
          ./__build__/src/ibexopt benchs/optim/medium/\$$file --random-seed=\$$i >> hill-climbing.log
        done
      done &&
      echo 'Ejecución completada'"
    deploy:
      resources:
        limits:
          cpus: "1.0"

  abstaylor:
    build: .
    tty: true
    stdin_open: true
    image: abstaylor
    container_name: abstaylor
    volumes:
      - ./abstaylor:/app
    command: >
      bash -c "cd /app &&
      rm -f abstaylor.log &&
      ./waf configure --lp-lib=soplex --interval-lib=gaol --lp-lib=soplex &&
      ./waf install &&
      files=("ex2_1_8.bch" "ex2_1_9.bch" "ex6_1_3bis.bch" "launch.bch" "ex14_2_7.bch" "ex2_1_9fact.bch" "ex6_1_4.bch" "ex6_2_6.bch" "ex6_2_8.bch" "ex7_3_4.bch" "ex7_3_4bis.bch" "ex14_2_3.bch" "haverly.bch") &&
      for file in \$${files[@]}; do
        for i in {1..5}; do
          ./__build__/src/ibexopt benchs/optim/medium/\$$file --random-seed=\$$i >> abstaylor.log
        done
      done &&
      echo 'Ejecución completada'"
    deploy:
      resources:
        limits:
          cpus: "1.0"

  simulated-annealing-parallel:
    build: .
    tty: true
    stdin_open: true
    image: simulated-annealing-parallel
    container_name: simulated-annealing-parallel
    volumes:
      - ./simulated-annealing-parallel:/app
    command: >
      bash -c "cd /app &&
      rm -f simulated-annealing-parallel.log &&
      ./waf configure --lp-lib=soplex --interval-lib=gaol --lp-lib=soplex &&
      ./waf install &&
      files=("ex2_1_8.bch" "ex2_1_9.bch" "ex6_1_3bis.bch" "launch.bch" "ex14_2_7.bch" "ex2_1_9fact.bch" "ex6_1_4.bch" "ex6_2_6.bch" "ex6_2_8.bch" "ex7_3_4.bch" "ex7_3_4bis.bch" "ex14_2_3.bch" "haverly.bch") &&
      for file in \$${files[@]}; do
        for i in {1..5}; do
          ./__build__/src/ibexopt benchs/optim/medium/\$$file --random-seed=\$$i >> simulated-annealing-parallel.log
        done
      done &&
      echo 'Ejecución completada'"
    deploy:
      resources:
        limits:
          cpus: "5.0"

  hill-climbing-parallel:
    build: .
    tty: true
    stdin_open: true
    image: hill-climbing-parallel
    container_name: hill-climbing-parallel
    volumes:
      - ./hill-climbing-parallel:/app
    command: >
      bash -c "cd /app &&
      rm -f hill-climbing-parallel.log &&
      ./waf configure --lp-lib=soplex --interval-lib=gaol --lp-lib=soplex &&
      ./waf install &&
      files=("ex2_1_8.bch" "ex2_1_9.bch" "ex6_1_3bis.bch" "launch.bch" "ex14_2_7.bch" "ex2_1_9fact.bch" "ex6_1_4.bch" "ex6_2_6.bch" "ex6_2_8.bch" "ex7_3_4.bch" "ex7_3_4bis.bch" "ex14_2_3.bch" "haverly.bch") &&
      for file in \$${files[@]}; do
        for i in {1..5}; do
          ./__build__/src/ibexopt benchs/optim/medium/\$$file --random-seed=\$$i >> hill-climbing-parallel.log
        done
      done &&
      echo 'Ejecución completada'"
    deploy:
      resources:
        limits:
          cpus: "5.0"

  simulated-annealing-joa-parallel:
    build: .
    tty: true
    stdin_open: true
    image: simulated-annealing-joa-parallel
    container_name: simulated-annealing-joa-parallel
    volumes:
      - ./simulated-annealing-joa-parallel:/app
    command: >
      bash -c "cd /app &&
      rm -f simulated-annealing-joa-parallel.log &&
      ./waf configure --lp-lib=soplex --interval-lib=gaol --lp-lib=soplex &&
      ./waf install &&
      files=("ex2_1_8.bch" "ex2_1_9.bch" "ex6_1_3bis.bch" "launch.bch" "ex14_2_7.bch" "ex2_1_9fact.bch" "ex6_1_4.bch" "ex6_2_6.bch" "ex6_2_8.bch" "ex7_3_4.bch" "ex7_3_4bis.bch" "ex14_2_3.bch" "haverly.bch") &&
      for file in \$${files[@]}; do
        for i in {1..5}; do
          ./__build__/src/ibexopt benchs/optim/medium/\$$file --random-seed=\$$i >> simulated-annealing-joa-parallel.log
        done
      done &&
      echo 'Ejecución completada'"
    deploy:
      resources:
        limits:
          cpus: "5.0"

  pruebas:
    build: .
    tty: true
    stdin_open: true
    image: pruebas
    container_name: pruebas
    volumes:
      - ./pruebas:/app
    command: >
      bash -c "cd /app &&
      g++ --std=c++11 -pthread main.cpp -o main &&
      ./main &&
      tail -f /dev/null"
    deploy:
      resources:
        limits:
          cpus: "5.0"
